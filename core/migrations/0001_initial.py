# Generated by Django 2.1.3 on 2018-11-14 19:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=255, verbose_name='Бренд')),
                ('country', models.CharField(max_length=255, verbose_name='Країна')),
                ('weight', models.FloatField(max_length=255, verbose_name='Вага')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Опис')),
            ],
            options={
                'verbose_name': 'характеристика',
                'verbose_name_plural': 'Характеристики',
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="Ім'я")),
                ('surname', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('phone', models.CharField(max_length=15, verbose_name='Номер телефону')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='consumer', to=settings.AUTH_USER_MODEL, verbose_name='Акаунт')),
            ],
            options={
                'verbose_name': 'користувач',
                'verbose_name_plural': 'Користувачі',
            },
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('login', models.CharField(max_length=50, verbose_name='Логін')),
                ('surname', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('name', models.CharField(max_length=255, verbose_name="Ім'я")),
                ('phone', models.CharField(max_length=15, verbose_name='Номер телефону')),
            ],
            options={
                'verbose_name': 'кур’єр',
                'verbose_name_plural': 'Кур’єри',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва')),
                ('department_images', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Логотип відділу')),
            ],
            options={
                'verbose_name': 'відділ',
                'verbose_name_plural': 'Відділи',
            },
        ),
        migrations.CreateModel(
            name='GroupOfProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва групи')),
            ],
            options={
                'verbose_name': 'група товару',
                'verbose_name_plural': 'Групи товарів',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Consumer', verbose_name='Клієнт')),
            ],
        ),
        migrations.CreateModel(
            name='PositionInTheBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_of_product', models.FloatField(verbose_name='Кількість товару')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва товару')),
                ('price', models.FloatField(verbose_name='Вартість')),
                ('picture', models.ImageField(blank=True, default='default.jpg', upload_to='', verbose_name='Фото товару')),
                ('bar_code', models.IntegerField(verbose_name='Штрих код')),
                ('accessibility', models.BooleanField(default=False, verbose_name='Доступність')),
                ('characteristic', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Characteristic', verbose_name='Характеристика')),
                ('group_of_products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.GroupOfProducts', verbose_name='Група товару')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'Товари',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Відгук')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Consumer', verbose_name='Клієнт')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('login', models.CharField(max_length=50, verbose_name='Логін')),
                ('surname', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('name', models.CharField(max_length=255, verbose_name="Ім'я")),
            ],
            options={
                'verbose_name': 'робітник',
                'verbose_name_plural': 'Робітники',
            },
        ),
        migrations.AddField(
            model_name='positioninthebasket',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='order',
            name='position_in_the_basket',
            field=models.ManyToManyField(to='core.PositionInTheBasket', verbose_name='Позиція в корзині'),
        ),
        migrations.AddField(
            model_name='department',
            name='group_of_products',
            field=models.ManyToManyField(blank=True, to='core.GroupOfProducts', verbose_name='Підкатегорія'),
        ),
        migrations.AddField(
            model_name='basket',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Consumer', verbose_name='Клієнт'),
        ),
        migrations.AddField(
            model_name='basket',
            name='position_in_the_basket',
            field=models.ManyToManyField(to='core.PositionInTheBasket', verbose_name='Позиція в корзині'),
        ),
    ]
